// 전처리기 : 컴파일러 전에 처리해주는 역할
// 컴파일러 : 소스코드를 컴퓨터언어로 번역하여 전달해주는 역할 - '빌드' 시 실행 가능한 파일이 생성됨.
// 실행 : 디버그 - 디버그하지 않고 시작 (실행되지 않을 때 : 프로젝트 - 속성 - 링커 - 시스템 - 콘솔)

#include<stdio.h>  // 전처리기 # : 함수를 호출해줌 (stdio.h : standard input output header 파일)
void main() { // output function(input) { } <- 메소드 시그니처 / main 함수는 input, output이 없다(void)
	printf("안녕하세요!\n반갑습니다\n\n"); // <stdio.h>안에 printf()가 정의되어 있기 때문에 호출 가능

	// 변수 선언
	int a; // 변수 정의
	int i = 10; // 변수 초기화 - 변수에 값을 저장함
	double d = 3.14;
	char c = 'A';
}

/*
데이터 종류 == data type == 자료형
1) 정수 int - 4byte
2) 실수 double - 8byte 소숫점 아래 6자리까지 표기됨
3) (단일)문자 char (영어 알파벳만) a, b, c ... - 1byte
4) 문자열 string (한글 포함) apple, 홍길동, ㄱ, 가 ... - 문자길이에 따라 달라짐
*/

/*
함수()의 3요소
1. input = 입력값 = 매개변수 = 파라미터 = 인자 = 인수
2. output = 출력값 = 리턴값 = 반환값 = 결과값
3. function = 로직 = 알고리즘 = 기능 = 식
*/

/*
변수의 3요소
1. 저장공간 = 메모리
2. 저장공간의 위치 = 메모리 주소
3. 주소의 이름 = 변수명 = 식별자
 식별자(변수명) 규칙
  1. 숫자로 시작 불가
  2. 특수 기호 ( _, $만 허용)
  3. 키워드 사용 불가
*/